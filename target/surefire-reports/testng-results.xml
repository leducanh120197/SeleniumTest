<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="19" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-04-27T23:14:02 ICT" name="Surefire suite" finished-at="2020-04-27T23:17:58 ICT" duration-ms="235635">
    <groups>
    </groups>
    <test started-at="2020-04-27T23:14:02 ICT" name="Surefire test" finished-at="2020-04-27T23:17:58 ICT" duration-ms="235635">
      <class name="testFlow.Bai4">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testFlow.Bai4@12028586]" started-at="2020-04-27T23:17:09 ICT" name="beforeMethod" finished-at="2020-04-27T23:17:15 ICT" duration-ms="5555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:testFlow.Bai4@12028586]" started-at="2020-04-27T23:17:15 ICT" name="f" finished-at="2020-04-27T23:17:37 ICT" duration-ms="22570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testFlow.Bai4@12028586]" started-at="2020-04-27T23:17:37 ICT" name="afterMethod" finished-at="2020-04-27T23:17:38 ICT" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testFlow.Bai4 -->
      <class name="testFlow.Bai5">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testFlow.Bai5@17776a8]" started-at="2020-04-27T23:17:38 ICT" name="beforeMethod" finished-at="2020-04-27T23:17:43 ICT" duration-ms="5531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:testFlow.Bai5@17776a8]" started-at="2020-04-27T23:17:43 ICT" name="f" finished-at="2020-04-27T23:17:58 ICT" duration-ms="14903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testFlow.Bai5@17776a8]" started-at="2020-04-27T23:17:58 ICT" name="afterMethod" finished-at="2020-04-27T23:17:58 ICT" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testFlow.Bai5 -->
      <class name="apitest.Bai8">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai8@d6da883]" started-at="2020-04-27T23:16:12 ICT" name="beforeMethod" finished-at="2020-04-27T23:16:17 ICT" duration-ms="5488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="printTokyo()[pri:0, instance:apitest.Bai8@d6da883]" started-at="2020-04-27T23:16:17 ICT" name="printTokyo" finished-at="2020-04-27T23:16:19 ICT" duration-ms="1500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printTokyo -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai8@d6da883]" started-at="2020-04-27T23:16:19 ICT" name="afterMethod" finished-at="2020-04-27T23:16:19 ICT" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai8 -->
      <class name="testFlow.Bai2">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testFlow.Bai2@49c43f4e]" started-at="2020-04-27T23:16:42 ICT" name="beforeMethod" finished-at="2020-04-27T23:16:47 ICT" duration-ms="5455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:testFlow.Bai2@49c43f4e]" started-at="2020-04-27T23:16:47 ICT" name="f" finished-at="2020-04-27T23:16:52 ICT" duration-ms="4378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testFlow.Bai2@49c43f4e]" started-at="2020-04-27T23:16:52 ICT" name="afterMethod" finished-at="2020-04-27T23:16:52 ICT" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testFlow.Bai2 -->
      <class name="testFlow.Bai3">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testFlow.Bai3@290dbf45]" started-at="2020-04-27T23:16:52 ICT" name="beforeMethod" finished-at="2020-04-27T23:16:57 ICT" duration-ms="5496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:testFlow.Bai3@290dbf45]" started-at="2020-04-27T23:16:57 ICT" name="f" finished-at="2020-04-27T23:17:09 ICT" duration-ms="11847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testFlow.Bai3@290dbf45]" started-at="2020-04-27T23:17:09 ICT" name="afterMethod" finished-at="2020-04-27T23:17:09 ICT" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testFlow.Bai3 -->
      <class name="apitest.Bai9">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai9@45afc369]" started-at="2020-04-27T23:16:19 ICT" name="beforeMethod" finished-at="2020-04-27T23:16:24 ICT" duration-ms="5448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai9@45afc369]" started-at="2020-04-27T23:16:24 ICT" name="f" finished-at="2020-04-27T23:16:27 ICT" duration-ms="2535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai9@45afc369]" started-at="2020-04-27T23:16:27 ICT" name="afterMethod" finished-at="2020-04-27T23:16:27 ICT" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai9 -->
      <class name="testFlow.Bai1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testFlow.Bai1@799d4f69]" started-at="2020-04-27T23:16:27 ICT" name="beforeMethod" finished-at="2020-04-27T23:16:32 ICT" duration-ms="5498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:testFlow.Bai1@799d4f69]" started-at="2020-04-27T23:16:32 ICT" name="f" finished-at="2020-04-27T23:16:42 ICT" duration-ms="9381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testFlow.Bai1@799d4f69]" started-at="2020-04-27T23:16:42 ICT" name="afterMethod" finished-at="2020-04-27T23:16:42 ICT" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testFlow.Bai1 -->
      <class name="apitest.Bai4">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai4@6cc7b4de]" started-at="2020-04-27T23:15:10 ICT" name="beforeMethod" finished-at="2020-04-27T23:15:15 ICT" duration-ms="5581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai4@6cc7b4de]" started-at="2020-04-27T23:15:15 ICT" name="f" finished-at="2020-04-27T23:15:24 ICT" duration-ms="8569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai4@6cc7b4de]" started-at="2020-04-27T23:15:24 ICT" name="afterMethod" finished-at="2020-04-27T23:15:24 ICT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai4 -->
      <class name="apitest.Bai5">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai5@32cf48b7]" started-at="2020-04-27T23:15:24 ICT" name="beforeMethod" finished-at="2020-04-27T23:15:29 ICT" duration-ms="5502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai5@32cf48b7]" started-at="2020-04-27T23:15:29 ICT" name="f" finished-at="2020-04-27T23:15:34 ICT" duration-ms="4482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai5@32cf48b7]" started-at="2020-04-27T23:15:34 ICT" name="afterMethod" finished-at="2020-04-27T23:15:38 ICT" duration-ms="4505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai5 -->
      <class name="apitest.Bai6">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai6@679b62af]" started-at="2020-04-27T23:15:38 ICT" name="beforeMethod" finished-at="2020-04-27T23:15:44 ICT" duration-ms="5437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f2()[pri:0, instance:apitest.Bai6@679b62af]" started-at="2020-04-27T23:15:44 ICT" name="f2" finished-at="2020-04-27T23:15:46 ICT" duration-ms="2022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai6@679b62af]" started-at="2020-04-27T23:15:46 ICT" name="afterMethod" finished-at="2020-04-27T23:15:46 ICT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai6 -->
      <class name="apitest.Bai11">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai11@1ee807c6]" started-at="2020-04-27T23:14:25 ICT" name="beforeMethod" finished-at="2020-04-27T23:14:31 ICT" duration-ms="5554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai11@1ee807c6]" started-at="2020-04-27T23:14:31 ICT" name="f" finished-at="2020-04-27T23:14:33 ICT" duration-ms="1827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai11@1ee807c6]" started-at="2020-04-27T23:14:33 ICT" name="afterMethod" finished-at="2020-04-27T23:14:37 ICT" duration-ms="4177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai11 -->
      <class name="apitest.Bai7">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai7@5cdd8682]" started-at="2020-04-27T23:15:46 ICT" name="beforeMethod" finished-at="2020-04-27T23:15:51 ICT" duration-ms="5437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai7@5cdd8682]" started-at="2020-04-27T23:15:51 ICT" name="f" finished-at="2020-04-27T23:16:11 ICT" duration-ms="19954" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class="login"]"}
  (Session info: chrome=81.0.4044.122)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-DSGLPDL', ip: '192.168.1.170', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.122, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\leduc\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55521}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 33a284373f0ccffd24d9ee42a7c1e0f1
*** Element info: {Using=xpath, value=//*[@class="login"]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class="login"]"}
  (Session info: chrome=81.0.4044.122)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-DSGLPDL', ip: '192.168.1.170', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.122, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\Users\leduc\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55521}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 33a284373f0ccffd24d9ee42a7c1e0f1
*** Element info: {Using=xpath, value=//*[@class="login"]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at apitest.Bai7.f(Bai7.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai7@5cdd8682]" started-at="2020-04-27T23:16:11 ICT" name="afterMethod" finished-at="2020-04-27T23:16:12 ICT" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai7 -->
      <class name="apitest.Bai1">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai1@1442d7b5]" started-at="2020-04-27T23:14:03 ICT" name="beforeMethod" finished-at="2020-04-27T23:14:10 ICT" duration-ms="7281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="bai1()[pri:0, instance:apitest.Bai1@1442d7b5]" started-at="2020-04-27T23:14:10 ICT" name="bai1" finished-at="2020-04-27T23:14:18 ICT" duration-ms="8050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bai1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai1@1442d7b5]" started-at="2020-04-27T23:14:18 ICT" name="afterMethod" finished-at="2020-04-27T23:14:18 ICT" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai1 -->
      <class name="apitest.Bai2">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai2@76a4d6c]" started-at="2020-04-27T23:14:37 ICT" name="beforeMethod" finished-at="2020-04-27T23:14:42 ICT" duration-ms="5442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="bai2()[pri:0, instance:apitest.Bai2@76a4d6c]" started-at="2020-04-27T23:14:42 ICT" name="bai2" finished-at="2020-04-27T23:14:52 ICT" duration-ms="9684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bai2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai2@76a4d6c]" started-at="2020-04-27T23:14:52 ICT" name="afterMethod" finished-at="2020-04-27T23:14:56 ICT" duration-ms="4108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai2 -->
      <class name="apitest.Bai3">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai3@517cd4b]" started-at="2020-04-27T23:14:56 ICT" name="beforeMethod" finished-at="2020-04-27T23:15:02 ICT" duration-ms="5503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai3@517cd4b]" started-at="2020-04-27T23:15:02 ICT" name="f" finished-at="2020-04-27T23:15:09 ICT" duration-ms="7839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai3@517cd4b]" started-at="2020-04-27T23:15:09 ICT" name="afterMethod" finished-at="2020-04-27T23:15:10 ICT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai3 -->
      <class name="apitest.Bai10">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:apitest.Bai10@1efee8e7]" started-at="2020-04-27T23:14:18 ICT" name="beforeMethod" finished-at="2020-04-27T23:14:24 ICT" duration-ms="5441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f()[pri:0, instance:apitest.Bai10@1efee8e7]" started-at="2020-04-27T23:14:24 ICT" name="f" finished-at="2020-04-27T23:14:25 ICT" duration-ms="1626" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [13] but found [15]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [13] but found [15]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:563)
at apitest.Bai10.f(Bai10.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:apitest.Bai10@1efee8e7]" started-at="2020-04-27T23:14:25 ICT" name="afterMethod" finished-at="2020-04-27T23:14:25 ICT" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- apitest.Bai10 -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
